import{r as l,o as c,f as p,w as e,e as t,u as a,a as s,t as i,b as m,g as n,C as f,c as h}from"./app.902cdb4f.js";const g=s("h1",null,"My DApp",-1),C=s("p",null,"A wallet is connected !",-1),y=s("p",null,"No wallet connected yet.",-1),k=m(" Cannot connect to Ethereum network, please check your Metamask. "),w={__name:"SetupYourDappDemo",setup(u){const o={networks:[{chainId:1}],wallets:[{name:"metamask"}]};return(_,r)=>{const d=l("VEDemoCreator");return c(),p(d,{config:o},{default:e(()=>[g,t(a(n).OnSafe,null,{default:e(()=>[t(a(n).provider.OnSafe,null,{safe:e(()=>[t(a(f)),t(a(n).signer.OnSafe,null,{safe:e(()=>[C,s("p",null,"Its address is : '"+i(a(n).signer.address.value)+"'",1)]),unsafe:e(()=>[y]),_:1})]),unsafe:e(()=>[k]),_:1})]),_:1})]),_:1})}}},v=JSON.parse('{"title":"","description":"","frontmatter":{"layout":"page"},"headers":[],"relativePath":"guide/get-started/demo/setup-your-dapp.md"}'),D={name:"guide/get-started/demo/setup-your-dapp.md"},S=Object.assign(D,{setup(u){return(o,_)=>{const r=l("ClientOnly");return c(),h("div",null,[t(r,null,{default:e(()=>[t(w)]),_:1})])}}});export{v as __pageData,S as default};
