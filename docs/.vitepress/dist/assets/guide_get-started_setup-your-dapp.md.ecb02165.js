import{_ as p,r as s,o as l,c as o,e as n,w as t,d as c}from"./app.687a42d7.js";const g=JSON.parse('{"title":"Get started ~ Setup your DApp","description":"","frontmatter":{"title":"Get started ~ Setup your DApp","layout":"doc"},"headers":[{"level":2,"title":"The App.vue component","slug":"the-app-vue-component","link":"#the-app-vue-component","children":[]},{"level":2,"title":"The main.js file","slug":"the-main-js-file","link":"#the-main-js-file","children":[]},{"level":2,"title":"Run the DApp","slug":"run-the-dapp","link":"#run-the-dapp","children":[]}],"relativePath":"guide/get-started/setup-your-dapp.md"}'),r={name:"guide/get-started/setup-your-dapp.md"},i=c(`<h1 id="setup-your-dapp" tabindex="-1">Setup your DApp <a class="header-anchor" href="#setup-your-dapp" aria-hidden="true">#</a></h1><p>Now you have created a <a href="/guide/get-started/minimal-configuration.html">minimalist configurations</a> file, you can start creating a simple DApp by following the below headings.</p><h2 id="the-app-vue-component" tabindex="-1">The <code>App.vue</code> component <a class="header-anchor" href="#the-app-vue-component" aria-hidden="true">#</a></h2><p>Like in any Vue app we firstly have to create a <code>App.vue</code> component in the <code>src/</code> folder of our project. Here is a minimalist DApp component that simply displays a &quot;Connect Wallet&quot; button and displays some infos depending on the wallet connection status.</p><div class="language-html line-numbers-mode"><button class="copy"></button><span class="lang">html</span><pre><code><span class="line"><span style="color:#C9D1D9;">&lt;</span><span style="color:#7EE787;">script</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">setup</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#FF7B72;">import</span><span style="color:#C9D1D9;"> { dapp, ConnectWalletButton } </span><span style="color:#FF7B72;">from</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">&quot;tulipe&quot;</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"><span style="color:#C9D1D9;">&lt;/</span><span style="color:#7EE787;">script</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">&lt;</span><span style="color:#7EE787;">template</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">  &lt;</span><span style="color:#7EE787;">h1</span><span style="color:#C9D1D9;">&gt;My DApp&lt;/</span><span style="color:#7EE787;">h1</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">  &lt;</span><span style="color:#FFA198;">dapp.OnSafe</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">    &lt;</span><span style="color:#FFA198;">ConnectWalletButton</span><span style="color:#C9D1D9;">/&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">  &lt;/</span><span style="color:#FFA198;">dapp.OnSafe</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">  &lt;</span><span style="color:#FFA198;">dapp.signer.OnSafe</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">    &lt;</span><span style="color:#7EE787;">template</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">#safe</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">      &lt;</span><span style="color:#7EE787;">p</span><span style="color:#C9D1D9;">&gt;A wallet is connected !&lt;/</span><span style="color:#7EE787;">p</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">      &lt;</span><span style="color:#7EE787;">p</span><span style="color:#C9D1D9;">&gt;Its address is : &#39;{{ dapp.signer.address.value }}&#39;&lt;/</span><span style="color:#7EE787;">p</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">    &lt;/</span><span style="color:#7EE787;">template</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">    &lt;</span><span style="color:#7EE787;">template</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">#unsafe</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">      &lt;</span><span style="color:#7EE787;">p</span><span style="color:#C9D1D9;">&gt;No wallet connected yet.&lt;/</span><span style="color:#7EE787;">p</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">    &lt;/</span><span style="color:#7EE787;">template</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">  &lt;/</span><span style="color:#FFA198;">dapp.signer.OnSafe</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">&lt;/</span><span style="color:#7EE787;">template</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><p>Here are some explanations :</p><ul><li>When the is DApp is safe (successfuly initialized) displays a <code>ConnectWalletButton</code></li><li>When the signer is safe (a wallet is connected) displays a message and the address of the connected wallet</li><li>Else displays : &quot;No wallet connected yet.&quot;</li></ul><h2 id="the-main-js-file" tabindex="-1">The <code>main.js</code> file <a class="header-anchor" href="#the-main-js-file" aria-hidden="true">#</a></h2><p>A view app also requires a <code>main.js</code> file from which the app will be created and the <code>App.vue</code> component mounted. This file is also usually created in the <code>src/</code> folder.</p><p>Here is a minimal <code>main.js</code> file to create a Tulipe project.</p><div class="language-js line-numbers-mode"><button class="copy"></button><span class="lang">js</span><pre><code><span class="line"><span style="color:#FF7B72;">import</span><span style="color:#C9D1D9;"> { createApp } </span><span style="color:#FF7B72;">from</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">&quot;vue&quot;</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"><span style="color:#FF7B72;">import</span><span style="color:#C9D1D9;"> App </span><span style="color:#FF7B72;">from</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">&quot;./App.vue&quot;</span><span style="color:#C9D1D9;">;</span></span>
<span class="line highlighted"><span style="color:#FF7B72;">import</span><span style="color:#C9D1D9;"> { initTulipe } </span><span style="color:#FF7B72;">from</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">&quot;tulipe&quot;</span><span style="color:#C9D1D9;">;</span></span>
<span class="line highlighted"><span style="color:#FF7B72;">import</span><span style="color:#C9D1D9;"> { tulipeConfig } </span><span style="color:#FF7B72;">from</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">&quot;./tulipe.config.js&quot;</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">app</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">createApp</span><span style="color:#C9D1D9;">(App)</span></span>
<span class="line"></span>
<span class="line highlighted"><span style="color:#FF7B72;">await</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">initTulipe</span><span style="color:#C9D1D9;">(app, tulipeConfig)</span></span>
<span class="line highlighted"></span>
<span class="line highlighted"><span style="color:#C9D1D9;">app.</span><span style="color:#D2A8FF;">mount</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&quot;#app&quot;</span><span style="color:#C9D1D9;">)</span></span>
<span class="line highlighted"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>The <code>initTulipe()</code> function takes the <code>app</code> object as first argument and an optional <code>tulipeConfig</code> which contains the object exported from <code>tulipe.config.js</code>.</p><h2 id="run-the-dapp" tabindex="-1">Run the DApp <a class="header-anchor" href="#run-the-dapp" aria-hidden="true">#</a></h2><p>Finally you can run the DApp like any Vue project with :</p><div class="language-bash line-numbers-mode"><button class="copy"></button><span class="lang">bash</span><pre><code><span class="line"><span style="color:#C9D1D9;">npm run dev</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br></div></div><p>You&#39;re frontend should now be accessible at : <code>http://localhost:5173/</code></p><p>You can try to connect your Metamask web wallet if you have one, by clicking the &quot;Connect wallet&quot; button.</p><p><strong>Result</strong></p>`,18);function u(D,d,y,m,h,b){const a=s("VEDemoFrame"),e=s("ClientOnly");return l(),o("div",null,[i,n(e,null,{default:t(()=>[n(a,{src:"./demo/setup-your-dapp.html",height:"200px"})]),_:1})])}const F=p(r,[["render",u]]);export{g as __pageData,F as default};
