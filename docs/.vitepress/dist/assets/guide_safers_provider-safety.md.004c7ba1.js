import{_ as s,o as n,c as a,d as e}from"./app.687a42d7.js";const m=JSON.parse('{"title":"Safers ~ Provider","description":"","frontmatter":{"title":"Safers ~ Provider","layout":"doc"},"headers":[{"level":2,"title":"In scripts","slug":"in-scripts","link":"#in-scripts","children":[]},{"level":2,"title":"In templates","slug":"in-templates","link":"#in-templates","children":[]}],"relativePath":"guide/safers/provider-safety.md"}'),p={name:"guide/safers/provider-safety.md"},l=e(`<h1 id="provider-safety" tabindex="-1">Provider safety <a class="header-anchor" href="#provider-safety" aria-hidden="true">#</a></h1><p>In cases ...</p><ul><li>your DApp is not initialized yet</li><li>or if it is not connected to any network</li><li>or if the connected network is not in the networks you&#39;ve configured</li></ul><p>... using the <code>dapp.provider</code> instance is considered unsafe since it is simply unavailable or can lead to errors and/or unexpected behaviors.</p><p>So Tulipe provides developers with many safers that allows you to easily write safe code when your are using the <code>dapp.provider</code> object, here are them.</p><h2 id="in-scripts" tabindex="-1">In scripts <a class="header-anchor" href="#in-scripts" aria-hidden="true">#</a></h2><p>To make a piece of code that use the <code>dapp.provider</code> instance safe in scripts you can use the <code>onSafe()</code> method of the <code>dapp.provider</code> object :</p><div class="language-js line-numbers-mode"><button class="copy"></button><span class="lang">js</span><pre><code><span class="line"><span style="color:#FF7B72;">import</span><span style="color:#C9D1D9;"> { dapp } </span><span style="color:#FF7B72;">from</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">&quot;tulipe&quot;</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">dapp.provider.</span><span style="color:#D2A8FF;">onSafe</span><span style="color:#C9D1D9;">(() </span><span style="color:#FF7B72;">=&gt;</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#8B949E;">// Code here will be executed only when the dapp.provider is safe to use.</span></span>
<span class="line"><span style="color:#C9D1D9;">})</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>And if at some point in your code you have to test if the <code>dapp.provider</code> object is safe, you can use the <code>isSafe</code> computed property of the <code>dapp.provider</code> object :</p><div class="language-js line-numbers-mode"><button class="copy"></button><span class="lang">js</span><pre><code><span class="line"><span style="color:#FF7B72;">import</span><span style="color:#C9D1D9;"> { dapp } </span><span style="color:#FF7B72;">from</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">&quot;tulipe&quot;</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF7B72;">if</span><span style="color:#C9D1D9;"> (dapp.provider.isSafe.value) {</span></span>
<span class="line"><span style="color:#C9D1D9;">  console.</span><span style="color:#D2A8FF;">log</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&quot;The DApp provider is safe !&quot;</span><span style="color:#C9D1D9;">)</span></span>
<span class="line"><span style="color:#C9D1D9;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="in-templates" tabindex="-1">In templates <a class="header-anchor" href="#in-templates" aria-hidden="true">#</a></h2><p>To make a part of a template that use the <code>dapp.provider</code> object safe, you can wrap it in the <code>OnSafe</code> component of the <code>dapp.provider</code> object :</p><div class="language-html line-numbers-mode"><button class="copy"></button><span class="lang">html</span><pre><code><span class="line"><span style="color:#C9D1D9;">&lt;</span><span style="color:#7EE787;">template</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">  &lt;</span><span style="color:#FFA198;">dapp.provider.OnSafe</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">    &lt;</span><span style="color:#7EE787;">p</span><span style="color:#C9D1D9;">&gt;If I&#39;m rendered is that the DApp provider is safe to use&lt;/</span><span style="color:#7EE787;">p</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">  &lt;/</span><span style="color:#FFA198;">dapp.provider.OnSafe</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">&lt;/</span><span style="color:#7EE787;">template</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>And if you want to define a content to render when the DApp provider is unsafe and a content to render when the DApp provider is safe you can use the <code>#safe</code> and <code>#unsafe</code> slots of the component :</p><div class="language-html line-numbers-mode"><button class="copy"></button><span class="lang">html</span><pre><code><span class="line"><span style="color:#C9D1D9;">&lt;</span><span style="color:#7EE787;">template</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">  &lt;</span><span style="color:#FFA198;">dapp.provider.OnSafe</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">    &lt;</span><span style="color:#7EE787;">template</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">#safe</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">      &lt;</span><span style="color:#7EE787;">p</span><span style="color:#C9D1D9;">&gt;If I&#39;m rendered is that the DApp provider is safe to use&lt;/</span><span style="color:#7EE787;">p</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">    &lt;/</span><span style="color:#7EE787;">template</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">    &lt;</span><span style="color:#7EE787;">template</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">#unsafe</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">      &lt;</span><span style="color:#7EE787;">p</span><span style="color:#C9D1D9;">&gt;If I&#39;m rendered is that the DApp provider is NOT safe to use&lt;/</span><span style="color:#7EE787;">p</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">    &lt;/</span><span style="color:#7EE787;">template</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">  &lt;/</span><span style="color:#FFA198;">dapp.provider.OnSafe</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">&lt;/</span><span style="color:#7EE787;">template</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div>`,15),o=[l];function t(r,c,i,d,D,y){return n(),a("div",null,o)}const b=s(p,[["render",t]]);export{m as __pageData,b as default};
